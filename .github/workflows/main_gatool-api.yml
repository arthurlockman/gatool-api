name: Deploy GATool API
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main


jobs:
  # Build and test Docker image for pull requests
  build-image-pr:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Build
        run: dotnet build --configuration Release

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image (PR validation)
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ghcr.io/${{ github.repository }}:pr-${{ github.event.number }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-and-push-image:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.x'

      - name: Build
        run: dotnet build --configuration Release

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}

  deploy-aca:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: build-and-push-image
    permissions:
      id-token: write
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Deploy new revision to Azure Container App
        run: |
          echo "Creating new revision with image: ghcr.io/${{ github.repository }}:${{ github.sha }}"

          # Create a new revision with the updated image (suppress output to prevent env var leaks)
          az containerapp revision copy \
            --name gatool-api \
            --resource-group gatool \
            --image ghcr.io/${{ github.repository }}:${{ github.sha }} \
            --output none >/dev/null 2>&1

          if [ $? -eq 0 ]; then
            echo "New revision created successfully!"
          else
            echo "Failed to create new revision"
            exit 1
          fi

  newrelic-notify:
    runs-on: ubuntu-latest
    name: New Relic
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs:
      - deploy-aca
    steps:
      # This step creates a new Change Tracking Marker
      - name: New Relic Application Deployment Marker
        uses: newrelic/deployment-marker-action@v2.3.0
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
          version: "${{ github.sha }}"
          user: "${{ github.actor }}"
