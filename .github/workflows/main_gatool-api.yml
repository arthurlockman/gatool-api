name: Deploy GATool API
on:
  push:
    branches:
      - main


jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository }}:latest

  deploy-classic:
    runs-on: self-hosted
    needs: build-and-push-image
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install
        run: npm install

      - name: Build
        run: npm run build

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.7.0
        if: github.ref == 'refs/heads/main'
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Install PM2
        if: github.ref == 'refs/heads/main'
        run: npm i pm2

      - name: Deploy
        run: npm run deploy:production
        if: github.ref == 'refs/heads/main'

  newrelic-notify:
    runs-on: ubuntu-latest
    name: New Relic
    needs: deploy-classic
    steps:
      # This step builds a var with the release tag value to use later
      - name: Set Release Version from Tag
        run: echo "RELEASE_VERSION=${{ github.ref_name }}" >> $GITHUB_ENV
      # This step creates a new Change Tracking Marker
      - name: New Relic Application Deployment Marker
        uses: newrelic/deployment-marker-action@v2.3.0
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          guid: ${{ secrets.NEW_RELIC_DEPLOYMENT_ENTITY_GUID }}
          version: "${{ env.RELEASE_VERSION }}"
          user: "${{ github.actor }}"